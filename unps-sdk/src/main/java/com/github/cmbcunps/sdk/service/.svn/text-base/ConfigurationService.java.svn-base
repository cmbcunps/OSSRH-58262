package com.cmbc.unps.sdk.service;

import com.cmbc.unps.sdk.config.ConfigConstants;
import com.cmbc.unps.sdk.config.Configuration;
import com.cmbc.unps.sdk.config.ConfigurationLoader;
import com.cmbc.unps.sdk.exception.PlatformException;
import com.cmbc.unps.sdk.http.PostConstants;

public class ConfigurationService {
	private static final String paymentPath = "resource/config/payment.ini";

	private static final String paymentClassPath = "/config/payment.ini";

	public static boolean loadConfigAndCert() {
		return loadConfigAndCert(paymentPath);
	}

	public static boolean loadConfigAndCert(String configPath) {
		if (loadConfig(configPath)) {
			return CertService.init();
		} else {
			return false;
		}
	}

	public static boolean loadConfigAndCert_classPath() {
		return loadConfigAndCert_classPath(paymentClassPath);
	}

	public static boolean loadConfigAndCert_classPath(String configPath) {
		if (loadConfig_classPath(configPath)) {
			return CertService.init();
		} else {
			return false;
		}
	}

	/**
	 * 
	 * @return
	 */
	public static boolean loadConfig() {
		return loadConfig(paymentPath);
	}

	public static boolean loadConfig(String paymentFile) {
		try {
			return ConfigurationLoader.loadConfig(paymentFile) && initIntegerParams();
		} catch (PlatformException e) {
			e.printStackTrace();
			return false;
		}
	}

	private static boolean initIntegerParams() {
		String connectTimeoutStr = Configuration.getConfig(ConfigConstants.unps_connectTimeout);
		int connectTimeout = stringParamToInteger(connectTimeoutStr, PostConstants.connectTimeout);
		Configuration.setIntegerParams(ConfigConstants.unps_connectTimeout, connectTimeout);

		String readTimeoutStr = Configuration.getConfig(ConfigConstants.unps_readTimeout);
		int readTimeout = stringParamToInteger(readTimeoutStr, PostConstants.readTimeout);
		Configuration.setIntegerParams(ConfigConstants.unps_readTimeout, readTimeout);

		return true;
	}

	private static int stringParamToInteger(String connectTimeoutStr, int defaultValue) {
		int connectTimeout = 0;
		try {
			connectTimeout = Integer.parseInt(connectTimeoutStr);
		} catch (Exception e) {
			connectTimeout = defaultValue;
		}
		return connectTimeout;
	}

	/**
	 * 
	 * @return
	 */
	public static boolean loadConfig_classPath() {
		return loadConfig_classPath(paymentClassPath);
	}

	public static boolean loadConfig_classPath(String paymentFile) {
		try {
			return ConfigurationLoader.loadConfig_classPath(paymentFile) && initIntegerParams();
		} catch (PlatformException e) {
			e.printStackTrace();
			return false;
		}
	}

}
