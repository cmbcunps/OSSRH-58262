package com.cmbc.unps.sdk.util;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

public class TxtFileUtil {

	public static boolean reCreatFile(File txtFile) throws IOException {
		if (txtFile.exists()) {
			txtFile.delete();
		}
		try {
			return txtFile.createNewFile();
		} catch (IOException e) {
			e.printStackTrace();
			throw e;
		}
	}

	/**
	 * 写文件
	 * 
	 * @throws IOException
	 * @throws Exception
	 */
	public static boolean txtAppend(File file, String str) throws IOException {
		FileOutputStream fos = null;
		OutputStreamWriter osw = null;
		BufferedWriter bw = null;
		try {
			fos = new FileOutputStream(file, true);
			osw = new OutputStreamWriter(fos, "UTF-8");
			bw = new BufferedWriter(osw);
			bw.newLine();
			bw.append(str);
			bw.flush();
			return true;
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			throw e;
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
			throw e;
		} catch (IOException e) {
			e.printStackTrace();
			throw e;
		} finally {
			try {
				if (bw != null) {
					bw.close();
				}
			} catch (Exception e) {
			}
			try {
				if (osw != null) {
					osw.close();
				}
			} catch (Exception e) {
			}
			try {
				if (fos != null) {
					fos.close();
				}
			} catch (Exception e) {
			}
		}
	}

	/**
	 * 读文件
	 * 
	 * @throws IOException
	 */
	public static List<String> readTxt(File file) throws IOException {
		List<String> list = new ArrayList<String>();
		FileInputStream fis = null;
		InputStreamReader isr = null;
		BufferedReader reader = null;
		try {
			fis = new FileInputStream(file);
			isr = new InputStreamReader(fis, "UTF-8");
			reader = new BufferedReader(isr);

			String str = null;
			while ((str = reader.readLine()) != null) {
				list.add(str);
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			throw e;
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
			throw e;
		} catch (IOException e) {
			e.printStackTrace();
			throw e;
		} finally {
			try {
				if (reader != null) {
					reader.close();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			try {
				if (isr != null) {
					isr.close();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			try {
				if (fis != null) {
					fis.close();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return list;
	}

	public static boolean writeToTxt(List<String> strList, String filePath) throws IOException {
		FileOutputStream fileOutputStream = null;
		OutputStreamWriter writer = null;
		BufferedWriter bw = null;
		try {
			fileOutputStream = new FileOutputStream(filePath);
			writer = new OutputStreamWriter(fileOutputStream, "utf-8");
			bw = new BufferedWriter(writer);
			for (String str : strList) {
				bw.newLine();
				bw.append(str);
			}
			bw.newLine();
			bw.flush();
			return true;
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			throw e;
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
			throw e;
		} catch (IOException e) {
			e.printStackTrace();
			throw e;
		} finally {
			try {
				if (bw != null) {
					bw.close();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			try {
				if (writer != null) {
					writer.close();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			try {
				if (fileOutputStream != null) {
					fileOutputStream.close();
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
}
