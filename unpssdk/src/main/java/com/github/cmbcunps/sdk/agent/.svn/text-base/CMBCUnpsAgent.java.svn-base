package com.cmbc.unps.sdk.agent;

import java.util.Map;

import com.cmbc.unps.sdk.exception.PlatformException;
import com.cmbc.unps.sdk.security.ISecuRule;
import com.cmbc.unps.sdk.service.CMBCPostService;
import com.cmbc.unps.sdk.service.ConfigurationService;
import com.cmbc.unps.sdk.service.RedirectFormService;
import com.cmbc.unps.sdk.service.SecureRuleService;

public class CMBCUnpsAgent {

	public static ISecuRule secuRule = SecureRuleService.getSecureRule("SM203");

	private CMBCPostService cmbcPostService = new CMBCPostService();

	private RedirectFormService redirectFormService = new RedirectFormService();

	private SecureRuleService secureRuleService = new SecureRuleService();

	/**
	 * 加载参数
	 * 
	 * @return
	 */
	public static boolean loadConfigAndCert() {
		return ConfigurationService.loadConfigAndCert();
	}

	public static boolean loadConfigAndCert(String configPath) {
		return ConfigurationService.loadConfigAndCert(configPath);
	}

	/**
	 * 加密
	 * 
	 * @param merchantNum
	 * @param securityType
	 * @param responseMapStr
	 * @return
	 * @throws PlatformException
	 */
	public String encodeMsgToString(String merchantNum, String securityType, String responseMapStr) throws PlatformException {
		return secureRuleService.encodeMsgToString(merchantNum, securityType, responseMapStr);
	}

	public String encodeMsgToString(String merchantNum, String securityType, Map<String, String> busiMap) throws PlatformException {
		// ISecuRule secuRule = SecureRuleService.getSecureRule(securityType);
		// return secuRule.encodeMsgToString(merchantNum, busiMap);
		return secureRuleService.encodeMsgToString(merchantNum, securityType, busiMap);
	}

	/**
	 * 解密
	 * 
	 * @param merchantNum
	 * @param securityType
	 * @param responseMap
	 * @return
	 * @throws PlatformException
	 */
	public Map<String, Object> decodeMsgAll(String merchantNum, String securityType, Map<String, String> responseMap) throws PlatformException {
		Map<String, Object> responseBusiMap = secuRule.decodeMsg(merchantNum, responseMap);
		responseBusiMap.putAll(responseMap);
		return responseBusiMap;
	}

	public String decodeMsgToString(String merchantNum, String securityType, String responseMap) throws PlatformException {
		return secuRule.decodeMsgToString(merchantNum, responseMap);
	}

	/**
	 * 下载文件
	 * 
	 * @param requestMap
	 * @param localPath
	 * @return
	 * @throws Exception
	 */
	public String postFile(Map<String, String> requestMap, String localPath) throws Exception {
		return cmbcPostService.postFile(secuRule, requestMap, localPath);
	}

	/**
	 * 查询
	 * 
	 * @param requestMap
	 * @return
	 * @throws Exception
	 */
	public Map<String, Object> postQueryAll(Map<String, String> requestMap) throws Exception {
		return cmbcPostService.postQueryAll(secuRule, requestMap);
	}

	/**
	 * 同步交易
	 * 
	 * @param requestMap
	 * @return
	 * @throws Exception
	 */
	public Map<String, Object> postTransAll(Map<String, String> requestMap) throws Exception {
		return cmbcPostService.postTransAll(secuRule, requestMap);
	}

	/**
	 * 异步交易-见证支付
	 * 
	 * @param requestMap
	 * @return
	 * @throws PlatformException
	 */
	public String genSubmitForm(Map<String, String> requestMap) throws PlatformException {
		return redirectFormService.genSubmitForm(requestMap);
	}
}
